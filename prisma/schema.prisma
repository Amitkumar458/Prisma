// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = "mongodb+srv://amit:NfEQxxKCZJcfNfYE@cluster0.jxx4u.mongodb.net/prisma?retryWrites=true&w=majority"
}

model User{
  id String @id @default(auto()) @map("_id") @db.ObjectId
  name String
  email String @unique
  username String @unique
  password String
  posts Post[]
  followers Followers[]
  following Following[]
  conversationIds String[] @db.ObjectId
  conversations Chat[] @relation(fields: [conversationIds], references: [id])
}

model Post {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  title String
  body String
  Image String? 
  likeCount Int @default(0)
  slug String?
  createdAt DateTime @default(now())
  author User @relation(fields: [authorId] , references: [id] , onDelete:Cascade , onUpdate:Cascade)
  authorId String @db.ObjectId
}

model Followers {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  user User @relation(fields: [userId] , references: [id] , onDelete:Cascade , onUpdate:Cascade)
  userId String @db.ObjectId
  followerId String @db.ObjectId
}

model Following {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  user User @relation(fields: [userId] , references: [id] , onDelete:Cascade , onUpdate:Cascade)
  userId String @db.ObjectId
  followingId String @db.ObjectId
}


model Chat {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  createdAt DateTime @default(now())
  lastMessageAt DateTime @default(now())
  userIds String[] @db.ObjectId
  users User[] @relation(fields: [userIds], references: [id])
  message Message[]
}

model Message {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  senderId String @db.ObjectId
  reciverId String @db.ObjectId
  chatId String @db.ObjectId
  text String
  chat Chat @relation(fields: [chatId] , references: [id] , onDelete:Cascade , onUpdate:Cascade)
}